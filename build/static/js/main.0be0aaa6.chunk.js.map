{"version":3,"sources":["Components/Nav/Nav.js","Components/Body/Body.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","src","width","height","alt","Body","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","test","console","log","scope","type","id","placeholder","href","Component","Footer","target","App","Components_Nav_Nav","Components_Body_Body","Components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2RAmBeA,MAhBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,qEACJC,MAAM,KAAKC,OAAO,KAClBH,UAAU,2BAA2BI,IAAI,KAE9CP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oDCoGbK,qBA5GX,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAIJI,KAAO,WACHC,QAAQC,IAAI,UAJZT,EAAKO,OAFMP,wEAUX,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,KACAnB,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,cACAnB,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,aACAnB,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,SACAnB,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,UAGlBnB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,KACAnB,EAAAC,EAAAC,cAAA,iBAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,aAAaC,YAAY,gBAE5EtB,EAAAC,EAAAC,cAAA,iBAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,YAAYC,YAAY,eAE3EtB,EAAAC,EAAAC,cAAA,+BAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,QAAQC,YAAY,mBAEvEtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAGrBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,KACAnB,EAAAC,EAAAC,cAAA,kBAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,aAAaC,YAAY,eAE5EtB,EAAAC,EAAAC,cAAA,qBAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,YAAYC,YAAY,eAE3EtB,EAAAC,EAAAC,cAAA,6BAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,QAAQC,YAAY,mBAEvEtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAGrBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,KACAnB,EAAAC,EAAAC,cAAA,kBAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,aAAaC,YAAY,eAE5EtB,EAAAC,EAAAC,cAAA,qBAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,YAAYC,YAAY,eAE3EtB,EAAAC,EAAAC,cAAA,8BAEIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,QAAQC,YAAY,mBAEvEtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAMzBH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIiB,MAAM,OAAV,KACAnB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,aAAaC,YAAY,eAE5EtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,YAAYC,YAAY,eAE3EtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOjB,UAAU,eAAekB,GAAG,QAAQC,YAAY,mBAEvEtB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASC,GAAG,cAAclB,UAAU,mBAAjD,YAKhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAkBH,EAAAC,EAAAC,cAAA,KAAGqB,KAAK,KAAIvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,KAAZ,8BAvGlCqB,oBCyBJC,MAzBf,WACE,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,gBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,wCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,qBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,qDACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,4CACAH,EAAAC,EAAAC,cAAA,KAAGqB,KAAK,uCACLG,OAAO,SACPvB,UAAU,kBACVkB,GAAG,cAHN,4BCAKM,MAVf,WACE,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0be0aaa6.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.css';\n\nfunction Nav() {\n  return (\n    <div className=\"Nav\">\n        <nav className=\"navbar navbar-light bg-light margin-bottom\">\n            <img src=\"https://getbootstrap.com/docs/4.3/assets/brand/bootstrap-solid.svg\" \n                 width=\"30\" height=\"30\" \n                 className=\"d-inline-block align-top\" alt=\"\" \n            />\n            <ul className=\"nav\">\n              <li className=\"nav-item\"></li>\n            </ul>\n        </nav>\n    </div>\n  );\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport './Body.css';\n\nclass Body extends Component {\n    constructor () {\n        super();\n        this.test();\n    }\n    \n    test = () => {\n        console.log('hello');\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">First Name</th>\n                                <th scope=\"col\">Last Name</th>\n                                <th scope=\"col\">Email</th>\n                                <th scope=\"col\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td>\n                                    Mark\n                                    <input type=\"text\" className=\"form-control\" id=\"first-name\" placeholder=\"First Name\" />\n                                </td>\n                                <td>\n                                    Otto\n                                    <input type=\"text\" className=\"form-control\" id=\"last-name\" placeholder=\"Last Name\" />\n                                </td>\n                                <td>\n                                    innodjet@gmail.com\n                                    <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Email Address\" />\n                                </td>\n                                <td>\n                                    <i className=\"fa fa-edit\"></i>\n                                    <i className=\"fa fa-trash\"></i>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">2</th>\n                                <td>\n                                    Jacob\n                                    <input type=\"text\" className=\"form-control\" id=\"first-name\" placeholder=\"Fist Name\" />\n                                </td>\n                                <td>\n                                    Thornton\n                                    <input type=\"text\" className=\"form-control\" id=\"last-name\" placeholder=\"Last Name\" />\n                                </td>\n                                <td>\n                                    inno_dj@yahoo.fr\n                                    <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Email Address\" />\n                                </td>\n                                <td>\n                                    <i className=\"fa fa-edit\"></i>\n                                    <i className=\"fa fa-trash\"></i>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\">3</th>\n                                <td>\n                                    Larry\n                                    <input type=\"text\" className=\"form-control\" id=\"first-name\" placeholder=\"Fist Name\" />\n                                </td>\n                                <td>\n                                    The Bird\n                                    <input type=\"text\" className=\"form-control\" id=\"last-name\" placeholder=\"Last Name\" />\n                                </td>\n                                <td>\n                                    jacques@gmail.com\n                                    <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Email Address\" />\n                                </td>\n                                <td>\n                                    <i className=\"fa fa-edit\"></i>\n                                    <i className=\"fa fa-trash\"></i>\n                                </td>\n                            </tr>\n                        </tbody>\n                        \n\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\">4</th>\n                                <td>\n                                    <input type=\"text\" className=\"form-control\" id=\"first-name\" placeholder=\"Fist Name\" />\n                                </td>\n                                <td>\n                                    <input type=\"text\" className=\"form-control\" id=\"last-name\" placeholder=\"Last Name\" />\n                                </td>\n                                <td>\n                                    <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Email Address\" />\n                                </td>\n                                <td>\n                                    <button type=\"button\" id=\"save-button\" className=\"btn btn-primary\">Save</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div className=\"add-new-contact\"><a href=\"#\"><span className=\"plus\">+</span> Add new contact</a></div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Body;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"container\"> \n        <div className=\"card\" >\n          <div className=\"card-header\">\n           Technologies\n          </div>\n          <div className=\"card-body\">\n          <h5 className=\"card-title\"> Technologies used in this project: </h5>\n          <p className=\"card-text\"> React Framework </p>\n          <p className=\"card-text\"> Front End: HTML 5, CSS 3, JavaScript, Bootstrap </p>\n          <p className=\"card-text\"> Back End: Node.js, ExpressJS and MySql </p>\n          <a href=\"https://github.com/innodjet/my-lab-4\" \n             target=\"_blank\" \n             className=\"btn btn-primary\" \n             id=\"repoButton\"\n            > Github Reposotory </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Nav from './Components/Nav/Nav';\nimport Body from './Components/Body/Body';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Body></Body>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}