{"ast":null,"code":"import _slicedToArray from \"/Users/ndjeteli/Documents/my-lab-4-4/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ndjeteli/Documents/my-lab-4-4/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Nav from './Components/Nav/Nav';\nimport Body from './Components/Body/Body';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  const _useState = useState([{\n    id: 0,\n    firstName: 'NIK',\n    lastName: 'DJETELI',\n    age: '28',\n    updateMode: false\n  }, {\n    id: 1,\n    firstName: 'Derick',\n    lastName: 'Rose',\n    age: '38',\n    updateMode: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        contactData = _useState2[0],\n        setContactData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newContactData = _useState4[0],\n        setNewContactData = _useState4[1]; // Handle input changes in the form. \n\n\n  const handleInputEvent = event => {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    const id = target.id; // const targetObject = contactData;\n\n    const newData = contactData.map(el => {\n      if (name.toString() === 'firstName' && el.id === parseInt(id)) {\n        el.firstName = value;\n      } else {\n        if (name.toString() === 'lastName' && el.id === parseInt(id)) {\n          el.lastName = value;\n        } else {\n          if (name.toString() === 'age' && el.id === parseInt(id)) {\n            el.age = value;\n          }\n        }\n      }\n\n      return el;\n    });\n    setContactData(newData);\n  };\n\n  const editContact = id => {\n    const newData = contactData.map(el => {\n      if (el.id === parseInt(id)) {\n        el.updateMode = true;\n      }\n\n      return el;\n    });\n    setContactData(newData);\n  };\n\n  const deleteContact = id => {\n    console.log(id);\n  };\n\n  const saveNewContact = id => {\n    console.log(id);\n  };\n\n  const addNewContact = () => {\n    const id = newContactData.length === 0 ? contactData.length + 1 : newContactData[newContactData.length - 1].id + 1;\n    const data = [{\n      id: id,\n      firstName: '',\n      lastName: '',\n      age: '',\n      updateMode: true\n    }];\n    let result = [...newContactData, ...data];\n    setNewContactData(result);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Body, {\n    contactData: contactData,\n    editContact: editContact,\n    deleteContact: deleteContact,\n    saveNewContact: saveNewContact,\n    newContactData: newContactData,\n    addNewContact: addNewContact,\n    handleInputEvent: handleInputEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ndjeteli/Documents/my-lab-4-4/src/App.js"],"names":["React","useState","Nav","Body","Footer","App","id","firstName","lastName","age","updateMode","contactData","setContactData","newContactData","setNewContactData","handleInputEvent","event","preventDefault","target","name","value","newData","map","el","toString","parseInt","editContact","deleteContact","console","log","saveNewContact","addNewContact","length","data","result"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport './App.css';\nimport Nav from './Components/Nav/Nav';\nimport Body from './Components/Body/Body';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  const [contactData, setContactData] = useState([\n    {\n      id: 0,\n      firstName: 'NIK',\n      lastName: 'DJETELI',\n      age: '28',\n      updateMode: false\n    },\n    {\n      id: 1,\n      firstName: 'Derick',\n      lastName: 'Rose',\n      age: '38',\n      updateMode: false\n    }\n  ]);\n\n  const [newContactData , setNewContactData] = useState([\n\n  ]);\n\n \n\n  // Handle input changes in the form. \n  const handleInputEvent = (event) => {\n    event.preventDefault()\n    const target  = event.target;\n    const name = target.name;\n    const value = target.value;\n    const id = target.id;\n    // const targetObject = contactData;\n    const newData = contactData.map( (el) => {\n      if ( name.toString() === 'firstName' && el.id === parseInt(id) ) { \n        el.firstName = value; \n      } else { \n        if ( name.toString() === 'lastName'  && el.id === parseInt(id)) { \n          el.lastName = value; \n        } else { \n          if ( name.toString() === 'age' && el.id === parseInt(id) ) {\n            el.age = value; \n          } \n        }\n      }\n      return el;\n    });\n    setContactData(newData);\n  };\n\n  const editContact = ( id ) => {\n    const newData = contactData.map( (el) => {\n      if ( el.id === parseInt(id) ) { \n        el.updateMode = true; \n      } \n      return el;\n    });\n    setContactData(newData);\n  };\n\n  const deleteContact = ( id ) => {\n    console.log(id);\n  };\n\n  const saveNewContact = ( id ) => {\n    console.log(id);\n  };\n\n  const addNewContact = () => {\n    const id = newContactData.length === 0 ? (contactData.length+1):\n               (newContactData[newContactData.length-1].id + 1);\n    const data = [{\n      id: id,\n      firstName: '',\n      lastName: '',\n      age: '',\n      updateMode: true\n    }];\n    let result = [...newContactData , ...data];\n    setNewContactData(result);\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Body contactData={ contactData }  \n            editContact={ editContact }\n            deleteContact={ deleteContact }\n            saveNewContact={ saveNewContact }\n            newContactData={ newContactData }\n            addNewContact={ addNewContact }\n            handleInputEvent={ handleInputEvent } >\n      </Body>\n      <Footer></Footer>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}