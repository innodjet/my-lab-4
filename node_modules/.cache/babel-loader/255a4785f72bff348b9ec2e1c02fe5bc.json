{"ast":null,"code":"import _slicedToArray from \"/Users/ndjeteli/Documents/my-lab-4-4/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ndjeteli/Documents/my-lab-4-4/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Nav from './Components/Nav/Nav';\nimport Body from './Components/Body/Body';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  const _useState = useState([{\n    id: 0,\n    firstName: 'NIK',\n    lastName: 'DJETELI',\n    age: '28',\n    updateMode: false\n  }, {\n    id: 1,\n    firstName: 'Derick',\n    lastName: 'Rose',\n    age: '38',\n    updateMode: true\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        contactData = _useState2[0],\n        setcontactData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newContactData = _useState4[0],\n        setNewContactData = _useState4[1]; // Handle input changes in the form. \n\n\n  const handleInputEvent = event => {\n    event.preventDefault();\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    const id = target.id;\n    const targetObject = ContactData;\n    const newData = targetObject.map(el => {\n      if (name.toString() === 'firstName' && el.id === parseInt(id)) {\n        el.firstName = value;\n      } else {\n        if (name.toString() === 'lastName' && el.id === parseInt(id)) {\n          el.lastName = value;\n        } else {\n          if (name.toString() === 'age' && el.id === parseInt(id)) {\n            el.age = value;\n          }\n        }\n      }\n\n      return el;\n    });\n    setContactData(newData);\n  };\n\n  const editContact = id => {\n    console.log(id);\n  };\n\n  const deleteContact = id => {\n    console.log(id);\n  };\n\n  const saveNewContact = id => {\n    console.log(id);\n  };\n\n  const addNewContact = () => {\n    const id = newContactData.length === 0 ? contactData.length + 1 : newContactData[newContactData.length].id + 1;\n    const data = [{\n      id: id,\n      firstName: '',\n      lastName: '',\n      age: '',\n      updateMode: true\n    }];\n    let result = [...newContactData, ...data];\n    setNewContactData(result);\n    console.log(result);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Body, {\n    contactData: contactData,\n    editContact: editContact,\n    deleteContact: deleteContact,\n    saveNewContact: saveNewContact,\n    newContactData: newContactData,\n    addNewContact: addNewContact,\n    handleInputEvent: handleInputEvent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ndjeteli/Documents/my-lab-4-4/src/App.js"],"names":["React","useState","Nav","Body","Footer","App","id","firstName","lastName","age","updateMode","contactData","setcontactData","newContactData","setNewContactData","handleInputEvent","event","preventDefault","target","name","value","targetObject","ContactData","newData","map","el","toString","parseInt","setContactData","editContact","console","log","deleteContact","saveNewContact","addNewContact","length","data","result"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACyBJ,QAAQ,CAAC,CAC7C;AACEK,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,QAAQ,EAAE,SAHZ;AAIEC,IAAAA,GAAG,EAAE,IAJP;AAKEC,IAAAA,UAAU,EAAE;AALd,GAD6C,EAQ7C;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,QAAQ,EAAE,MAHZ;AAIEC,IAAAA,GAAG,EAAE,IAJP;AAKEC,IAAAA,UAAU,EAAE;AALd,GAR6C,CAAD,CADjC;AAAA;AAAA,QACNC,WADM;AAAA,QACOC,cADP;;AAAA,qBAkBgCX,QAAQ,CAAC,EAAD,CAlBxC;AAAA;AAAA,QAkBNY,cAlBM;AAAA,QAkBWC,iBAlBX,kBAwBb;;;AACA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAIF,KAAK,CAACE,MAAtB;AACA,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;AACA,UAAMd,EAAE,GAAGY,MAAM,CAACZ,EAAlB;AACA,UAAMe,YAAY,GAAGC,WAArB;AACA,UAAMC,OAAO,GAAGF,YAAY,CAACG,GAAb,CAAmBC,EAAD,IAAQ;AACxC,UAAKN,IAAI,CAACO,QAAL,OAAoB,WAApB,IAAmCD,EAAE,CAACnB,EAAH,KAAUqB,QAAQ,CAACrB,EAAD,CAA1D,EAAiE;AAC/DmB,QAAAA,EAAE,CAAClB,SAAH,GAAea,KAAf;AACD,OAFD,MAEO;AACL,YAAKD,IAAI,CAACO,QAAL,OAAoB,UAApB,IAAmCD,EAAE,CAACnB,EAAH,KAAUqB,QAAQ,CAACrB,EAAD,CAA1D,EAAgE;AAC9DmB,UAAAA,EAAE,CAACjB,QAAH,GAAcY,KAAd;AACD,SAFD,MAEO;AACL,cAAKD,IAAI,CAACO,QAAL,OAAoB,KAApB,IAA6BD,EAAE,CAACnB,EAAH,KAAUqB,QAAQ,CAACrB,EAAD,CAApD,EAA2D;AACzDmB,YAAAA,EAAE,CAAChB,GAAH,GAASW,KAAT;AACD;AACF;AACF;;AACD,aAAOK,EAAP;AACD,KAbe,CAAhB;AAcAG,IAAAA,cAAc,CAACL,OAAD,CAAd;AACD,GAtBD;;AAwBA,QAAMM,WAAW,GAAKvB,EAAF,IAAU;AAC5BwB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,EAAZ;AACD,GAFD;;AAIA,QAAM0B,aAAa,GAAK1B,EAAF,IAAU;AAC9BwB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,EAAZ;AACD,GAFD;;AAIA,QAAM2B,cAAc,GAAK3B,EAAF,IAAU;AAC/BwB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,EAAZ;AACD,GAFD;;AAIA,QAAM4B,aAAa,GAAG,MAAM;AAC1B,UAAM5B,EAAE,GAAGO,cAAc,CAACsB,MAAf,KAA0B,CAA1B,GAA+BxB,WAAW,CAACwB,MAAZ,GAAmB,CAAlD,GACCtB,cAAc,CAACA,cAAc,CAACsB,MAAhB,CAAd,CAAsC7B,EAAtC,GAAyC,CADrD;AAEA,UAAM8B,IAAI,GAAG,CAAC;AACZ9B,MAAAA,EAAE,EAAEA,EADQ;AAEZC,MAAAA,SAAS,EAAE,EAFC;AAGZC,MAAAA,QAAQ,EAAE,EAHE;AAIZC,MAAAA,GAAG,EAAE,EAJO;AAKZC,MAAAA,UAAU,EAAE;AALA,KAAD,CAAb;AAOA,QAAI2B,MAAM,GAAG,CAAC,GAAGxB,cAAJ,EAAqB,GAAGuB,IAAxB,CAAb;AACAtB,IAAAA,iBAAiB,CAACuB,MAAD,CAAjB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACD,GAbD;;AAeA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAG1B,WAApB;AACM,IAAA,WAAW,EAAGkB,WADpB;AAEM,IAAA,aAAa,EAAGG,aAFtB;AAGM,IAAA,cAAc,EAAGC,cAHvB;AAIM,IAAA,cAAc,EAAGpB,cAJvB;AAKM,IAAA,aAAa,EAAGqB,aALtB;AAMM,IAAA,gBAAgB,EAAGnB,gBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAeD;;AAED,eAAeV,GAAf","sourcesContent":["import React , {useState} from 'react';\nimport './App.css';\nimport Nav from './Components/Nav/Nav';\nimport Body from './Components/Body/Body';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  const [contactData, setcontactData] = useState([\n    {\n      id: 0,\n      firstName: 'NIK',\n      lastName: 'DJETELI',\n      age: '28',\n      updateMode: false\n    },\n    {\n      id: 1,\n      firstName: 'Derick',\n      lastName: 'Rose',\n      age: '38',\n      updateMode: true\n    }\n  ]);\n\n  const [newContactData , setNewContactData] = useState([\n\n  ]);\n\n \n\n  // Handle input changes in the form. \n  const handleInputEvent = (event) => {\n    event.preventDefault()\n    const target  = event.target;\n    const name = target.name;\n    const value = target.value;\n    const id = target.id;\n    const targetObject = ContactData;\n    const newData = targetObject.map( (el) => {\n      if ( name.toString() === 'firstName' && el.id === parseInt(id) ) { \n        el.firstName = value; \n      } else { \n        if ( name.toString() === 'lastName'  && el.id === parseInt(id)) { \n          el.lastName = value; \n        } else { \n          if ( name.toString() === 'age' && el.id === parseInt(id) ) {\n            el.age = value; \n          } \n        }\n      }\n      return el;\n    });\n    setContactData(newData);\n  };\n\n  const editContact = ( id ) => {\n    console.log(id);\n  };\n\n  const deleteContact = ( id ) => {\n    console.log(id);\n  };\n\n  const saveNewContact = ( id ) => {\n    console.log(id);\n  };\n\n  const addNewContact = () => {\n    const id = newContactData.length === 0 ? (contactData.length+1): \n               (newContactData[newContactData.length].id+1);\n    const data = [{\n      id: id,\n      firstName: '',\n      lastName: '',\n      age: '',\n      updateMode: true\n    }];\n    let result = [...newContactData , ...data];\n    setNewContactData(result);\n    console.log(result);\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Body contactData={ contactData }  \n            editContact={ editContact }\n            deleteContact={ deleteContact }\n            saveNewContact={ saveNewContact }\n            newContactData={ newContactData }\n            addNewContact={ addNewContact }\n            handleInputEvent={ handleInputEvent } >\n      </Body>\n      <Footer></Footer>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}